name: Laravel Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ["8.2"]
    defaults:
      run:
        working-directory: app/laravel
    name: PHP ${{ matrix.php }} - Laravel Tests

    env:
      php-extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: pinkieittest
          MYSQL_USER: pinkieit
          MYSQL_PASSWORD: pinkieit123
          MYSQL_ROOT_PASSWORD: pinkieit123
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Copy .env
        run: |
          yes | ./setup.sh
          cp .env app/laravel/.env
        shell: sh # これをしないと -o pipefail がついて yes が sigpipe で落ちる
        working-directory: .

      - name: Setup cache environment
        id: ext-cache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.php-extensions }}
          key: php-ext-cache

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.ext-cache.outputs.dir }}
          key: ${{ steps.ext-cache.outputs.key }}
          restore-keys: ${{ steps.ext-cache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.php-extensions }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-

      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: app/laravel

      - name: Generate key
        run: php artisan key:generate
        working-directory: app/laravel

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
        working-directory: app/laravel

      - name: Configure MySQL Connection
        run: |
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=pinkieittest/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=pinkieit/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=pinkieit123/' .env
        working-directory: app/laravel

      - name: Run Migrations
        run: php artisan migrate:fresh
        working-directory: app/laravel

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test
        working-directory: app/laravel
